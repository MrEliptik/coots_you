[gd_scene load_steps=12 format=2]

[ext_resource path="res://scenes/ui/pause/scripts/pause.gd" type="Script" id=1]
[ext_resource path="res://scenes/ui/fonts/aldo_the_apache/AldotheApache.ttf" type="DynamicFontData" id=2]
[ext_resource path="res://scenes/ui/shared/cursor.tscn" type="PackedScene" id=3]

[sub_resource type="DynamicFont" id=7]
size = 250
use_mipmaps = true
use_filter = true
font_data = ExtResource( 2 )

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;

uniform float projector_power : hint_range(0,1) = 0.5;
uniform sampler2D distortionTexture;
uniform float vignette_param: hint_range(1,10)=20.0;

//vars related to the passing lines


//noise for the projector flickering
float noise(vec2 input){
	return fract(sin(dot(input,vec2(3.1415,8952.37)*12.29))*93.116);
}

void fragment() {
	//vignette-related:
	float vignette_param2 =vignette_param+0.5*(noise(vec2(TIME/60.0,TIME/59.0)));
	float vig=-vignette_param2*((UV.x-0.5)*(UV.x-0.5)+(UV.y-0.5)*(UV.y-0.5));
	vec4 vignette=vec4(vig,vig,vig,1.0);

	//grayscale-related:
	vec4 pixelcolor = texture(SCREEN_TEXTURE, SCREEN_UV);
	float brightness = (.299*pixelcolor.r + 0.487*pixelcolor.g + 0.114*pixelcolor.b);
	vec4 grayscale= vec4(brightness,brightness,brightness,pixelcolor.a);
	
	//random-fluctuation:
	vec4 random=texture(distortionTexture,UV);
	
	//Small speckles:
	float RTIME1=round(TIME*20.0);
	vec2 position1=vec2(noise(vec2(RTIME1,RTIME1)),noise(vec2(RTIME1/2.0,RTIME1/2.0)));
	float energy= 1000000.0*(1.0+0.5*noise(vec2(RTIME1,RTIME1)));
	float xdev1=(UV.x-position1.x);
	float ydev1=(UV.y-position1.y);
	float spec=energy*(xdev1*xdev1+0.5*ydev1*ydev1)+.1*noise(vec2(UV.x,UV.y));
	vec4 speckle=vec4(max(0.0,20.0-spec),max(0.0,20.0-spec),max(0.0,20.0-spec),1.0);
	
	//lines:
	float RTIME2=round(TIME*5.0);
	vec2 positionline=vec2(noise(vec2(RTIME2,RTIME2))/4.0,noise(vec2(RTIME2/3.0,RTIME2/3.0)));
	float xline=(UV.x-positionline.x);
	float yline=(UV.y-positionline.y);
	float lin=energy*(xline*xline+0.00001*yline*yline)+.1*noise(vec2(UV.x,UV.y));
	vec4 line=vec4(max(0.0,8.0-lin),max(0.0,8.0-lin),max(0.0,8.0-lin),1.0);
	
	//combining-the parts:
	vec4 dirt=mix(speckle,line,0.5);
	vec4 grayscale2=mix(random,vignette,0.7);
	vec4 grayscale3=mix(dirt,grayscale2,0.7);
	COLOR = mix(grayscale, grayscale3, projector_power);
}"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )
shader_param/projector_power = 0.0
shader_param/vignette_param = 1.0

[sub_resource type="DynamicFont" id=8]
size = 42
use_mipmaps = true
use_filter = true
font_data = ExtResource( 2 )

[sub_resource type="StyleBoxFlat" id=6]
bg_color = Color( 0.121569, 0.121569, 0.121569, 1 )
corner_radius_top_left = 5
corner_radius_top_right = 5
corner_radius_bottom_right = 5
corner_radius_bottom_left = 5

[sub_resource type="DynamicFont" id=3]
size = 64
use_mipmaps = true
use_filter = true
font_data = ExtResource( 2 )

[sub_resource type="StyleBoxFlat" id=4]
bg_color = Color( 0.121569, 0.121569, 0.121569, 1 )
border_width_left = 3
border_width_top = 3
border_width_right = 3
border_width_bottom = 3
border_color = Color( 1, 1, 1, 1 )
corner_radius_top_left = 5
corner_radius_top_right = 5
corner_radius_bottom_right = 5
corner_radius_bottom_left = 5

[sub_resource type="StyleBoxFlat" id=5]
bg_color = Color( 0.0392157, 0.0392157, 0.0392157, 1 )
corner_radius_top_left = 5
corner_radius_top_right = 5
corner_radius_bottom_right = 5
corner_radius_bottom_left = 5

[node name="Pause" type="Control"]
pause_mode = 2
anchor_right = 1.0
anchor_bottom = 1.0
script = ExtResource( 1 )

[node name="Label" type="Label" parent="."]
anchor_left = 0.5
anchor_right = 0.5
margin_left = -333.0
margin_top = 58.0
margin_right = 331.0
margin_bottom = 266.0
grow_horizontal = 2
grow_vertical = 2
rect_pivot_offset = Vector2( 332, 104 )
custom_fonts/font = SubResource( 7 )
text = "PAUSE"
align = 1
valign = 1

[node name="OldMovieShader" type="ColorRect" parent="."]
material = SubResource( 2 )
anchor_right = 1.0
anchor_bottom = 1.0

[node name="HBoxContainer2" type="HBoxContainer" parent="."]
anchor_left = 0.5
anchor_top = 1.0
anchor_right = 0.5
anchor_bottom = 1.0
margin_left = -263.0
margin_top = -467.0
margin_right = 264.0
margin_bottom = -401.0
custom_constants/separation = 25

[node name="MusicSlider" type="HSlider" parent="HBoxContainer2"]
margin_right = 402.0
margin_bottom = 66.0
size_flags_horizontal = 3
size_flags_vertical = 3
value = 60.0

[node name="Label" type="Label" parent="HBoxContainer2"]
margin_left = 427.0
margin_right = 527.0
margin_bottom = 66.0
rect_min_size = Vector2( 100, 0 )
size_flags_vertical = 7
custom_fonts/font = SubResource( 8 )
custom_styles/normal = SubResource( 6 )
text = "60"
align = 1
valign = 1

[node name="HBoxContainer" type="HBoxContainer" parent="."]
anchor_left = 0.5
anchor_top = 1.0
anchor_right = 0.5
anchor_bottom = 1.0
margin_left = -263.5
margin_top = -380.0
margin_right = 263.5
margin_bottom = -276.0
custom_constants/separation = 25

[node name="ContinueBtn" type="Button" parent="HBoxContainer"]
margin_right = 251.0
margin_bottom = 104.0
size_flags_horizontal = 3
custom_fonts/font = SubResource( 3 )
custom_styles/hover = SubResource( 4 )
custom_styles/pressed = SubResource( 5 )
custom_styles/focus = SubResource( 4 )
custom_styles/normal = SubResource( 6 )
text = "CONTINUE"

[node name="QuitBtn" type="Button" parent="HBoxContainer"]
margin_left = 276.0
margin_right = 527.0
margin_bottom = 104.0
size_flags_horizontal = 3
custom_fonts/font = SubResource( 3 )
custom_styles/hover = SubResource( 4 )
custom_styles/pressed = SubResource( 5 )
custom_styles/focus = SubResource( 4 )
custom_styles/normal = SubResource( 6 )
text = "QUIT"

[node name="Cursor" parent="." instance=ExtResource( 3 )]
position = Vector2( 406, 826 )

[connection signal="value_changed" from="HBoxContainer2/MusicSlider" to="." method="_on_MusicSlider_value_changed"]
[connection signal="focus_entered" from="HBoxContainer/ContinueBtn" to="." method="_on_ContinueBtn_focus_entered"]
[connection signal="pressed" from="HBoxContainer/ContinueBtn" to="." method="_on_ContinueBtn_pressed"]
[connection signal="focus_entered" from="HBoxContainer/QuitBtn" to="." method="_on_QuitBtn_focus_entered"]
[connection signal="pressed" from="HBoxContainer/QuitBtn" to="." method="_on_QuitBtn_pressed"]
